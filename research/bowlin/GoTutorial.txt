This file contains my notes from the tutorial at https://go.dev/tour/welcome/1.

· Go programs are made up of packages
· Go programs start running in the main package
· import (... ,... , etc) is used to import multiple packages
    · Can also do multiple import statements
· You name a package with "  package _____  " at the top of a .go file
· Convention says the package name has the same name as the last name
    of the output path
· Packages only export variables that start with capital letters
· Functions can take and return any numbers of things
· Go's return variables can be named so that they are initialized at the top of the Function
· A return statement w/out arguments return the named return values ("Naked" return)
· The var statement declares a list of variables where the type is stated last
· The var statement can be in the package (can be used in other packages) or function scope
· If an initializer (value) is used when decalaring variables, the type can be omitted
· := is a short assignment statement and can be used instead of var
    · Does not work outside of funtions.
· Variables declared without initial values are given their zero value=.
· The typename() expression can be used to convert types
· Declaring a variable without and explicit type will have it's type infered by what's on the right
· Constants are declared using the const keyword
    · Can be character, string, boolean, or numeric values